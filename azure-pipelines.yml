name: "Terraform Apply"

trigger:
  branches:
    include:
      - main
  paths:
    include:
      - deployments/terraform

pool:
  vmImage: 'ubuntu-latest'

parameters:
- name: azure_location
  displayName: 'Azure Location'
  type: string
  default: westeurope
  values:
  - notheurope
  - eastus2
  - centralus

- name: azure_location_dr
  displayName: 'Azure Location DR'
  type: string
  default: westeurope
  values:
  - notheurope
  - eastus2
  - centralus

variables:
  tfbackendrg: 'terraform-shared'
  tfbackendsa: 'mkoutfsharedsa'
  tfbackendcontainer: 'tfstates'
  tfbackendkey: 'skedda-chellenge.terraform.tfstate'

stages:
  - stage: tfvalidate
    jobs:
      - job: validate
        continueOnError: false
        steps:
        - task: TerraformInstaller@1
          displayName: tfinstall
          inputs:
            terraformVersion: 'latest'
        - task: TerraformTaskV4@4
          displayName: init
          inputs:
            provider: 'azurerm'
            command: 'init'
            backendServiceArm: 'AzureRMConnection'
            backendAzureRmResourceGroupName: '$(tfbackendrg)'
            backendAzureRmStorageAccountName: '$(tfbackendsa)'
            backendAzureRmContainerName: '$(tfbackendcontainer)'
            backendAzureRmKey: '$(tfbackendkey)'
            workingDirectory: 'deployments/terraform/'
            
        - task: TerraformTaskV4@4
          displayName: validate
          inputs:
            provider: 'azurerm'
            command: 'validate'
            workingDirectory: 'deployments/terraform/'
            environmentServiceNameAzureRM: 'AzureRMConnection'

  - stage: tfdeploy
    condition: succeeded('tfvalidate')
    dependsOn: tfvalidate
    jobs:
      - job: apply
        steps:
          - task: TerraformInstaller@1
            displayName: tfinstall
            inputs:
              terraformVersion: 'latest'
          - task: TerraformTaskV4@4
            displayName: init 
            env:
              ARM_ACCESS_KEY: $(STORAGEACCOUNTKEY)
            inputs:
              provider: 'azurerm'
              command: 'init'
              backendServiceArm: 'AzureRMConnection'
              backendAzureRmResourceGroupName: '$(tfbackendrg)'
              backendAzureRmStorageAccountName: '$(tfbackendsa)'
              backendAzureRmContainerName: '$(tfbackendcontainer)'
              backendAzureRmKey: '$(tfbackendkey)'
              workingDirectory: 'deployments/terraform/'
          - task: TerraformTaskV4@4
            displayName: plan
            inputs:
              provider: 'azurerm'
              command: 'plan'
              environmentServiceNameAzureRM: 'AzureRMConnection'
              workingDirectory: 'deployments/terraform'
          - task: TerraformTaskV4@4
            displayName: apply
            inputs:
              provider: 'azurerm'
              command: 'apply'
              environmentServiceNameAzureRM: 'AzureRMConnection'
              workingDirectory: 'deployments/terraform/'
          

