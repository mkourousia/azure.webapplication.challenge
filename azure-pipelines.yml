name: "Terraform Plan"

trigger:
  branches:
    include:
      - main

pool:
  vmImage: 'ubuntu-latest'

# steps:

# - task: TerraformInstaller@0
#   displayName: "Install Terraform"
#   inputs:
#     terraformVersion: '1.3.9'
#     terraformDownloadLocation: 'https://releases.hashicorp.com/terraform'

# - script: |
#     terraform init
#     terraform plan -out=terraform.tfplan -var-file='terraform.tfvars'
#   displayName: 'Terraform Plan'
#   env:
#     ARM_ACCESS_KEY: $(STORAGEACCOUNTKEY)
#   workingDirectory: 'deployments/terraform'
  
# - task: PublishBuildArtifacts@1
#   inputs:
#     pathtoPublish: '$(Build.SourcesDirectory)/terraform.tfplan'
#     artifactName: 'terraformPlan'
#     publishLocation: 'Container'


stages :
  - stage: terraform
    jobs:
    - job: validate
      continueOnError: false
      steps:
      - task: TerraformInstaller@0
        displayName: 'install'
        inputs:
          terraformVersion: '1.3.9'
      - task: TerraformTaskV2@2
        displayName: 'init'
        inputs:
          provider: 'azurerm'
          command: 'init'
          workingDirectory: 'deployments/terraform/'

      - task: TerraformTaskV2@2
        displayName: 'validate'
        inputs:
          provider: 'azurerm'
          command: 'validate'

      - task: TerraformTaskV2@2
        displayName: 'plan'
        inputs:
          provider: 'azurerm'
          command: 'plan'
          commandOptions: '-var-file="erraform.tfvars"'
          workingDirectory: 'deployments/terraform/'         
 
      # - task: TerraformTaskV2@2
      #   displayName: 'apply'
      #   inputs:
      #     provider: 'azurerm'
      #     command: 'apply'
      #     commandOptions: '-input=false -var name=$(name) -var environment=$(Environment) -var-file="../terraform/environments/$(Environment)/$(Environment).tfvars"'
      #     environmentServiceNameAzureRM: 'thomasthorntoncloud'
      #     workingDirectory: '$(System.DefaultWorkingDirectory)/terraform/'